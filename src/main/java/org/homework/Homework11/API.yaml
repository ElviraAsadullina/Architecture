openapi: 3.0.3
info:
  title: Robot service 3.0
  description: |-
    API сервис управления роботом - пылесосом.

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://localhost:9669
tags:
  - name: User
    description: Контроллер пользователя.
  - name: Schedule
    description: Контроллер расписания.
  - name: Group
    description: Контроллер группы.
  - name: Robot
    description: Контроллер робота.

paths:
  /User:
    put:
      tags:
        - User
      summary: Обновить пользователя
      description: Обновить пользователя
      operationId: updateUser
      requestBody:
        description: Обновляет существующего пользователя в БД
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: Group not found
        '405':
          description: Validation exception

    post:
      tags:
        - User
      summary: Добавить пользователя
      description: Добавить пользователя в базу
      operationId: addUser
      requestBody:
        description: Создание нового пользователя в базе
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input

  /User/findById/{userId}:
    get:
      tags:
        - User
      summary: Найти пользователя по ID
      description: вернуть одного пользователя
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: Идентификатор пользователя
          required: true
          schema:
      description: Данные пользователя
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        application/xml:
          schema:
            $ref: '#/components/schemas/User'

    UserArray:
      description: Список пользователей
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'

    Group:
      description: Данные группы
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Group'
        application/xml:
          schema:
            $ref: '#/components/schemas/Group'

    GroupArray:
      description: Список групп
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Group'

    Robot:
      description: Данные группы
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Robot'
        application/xml:
          schema:
            $ref: '#/components/schemas/Robot'

    RobotArray:
      description: Список групп
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Robot'

    Schedule:
      description: Данные группы
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Schedule'
        application/xml:
          schema:
            $ref: '#/components/schemas/Schedule'

    ScheduleArray:
      description: Список групп
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Schedule'
